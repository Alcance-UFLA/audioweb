-- MySQL Script generated by MySQL Workbench
-- Sex 26 Jun 2015 21:46:41 BRT
-- Model: AudioWeb    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema audioweb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema audioweb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `audioweb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `audioweb` ;

-- -----------------------------------------------------
-- Table `audioweb`.`licencas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`licencas` (
  `id_licenca` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(128) NULL DEFAULT '',
  PRIMARY KEY (`id_licenca`),
  UNIQUE INDEX `nome_UNIQUE` (`nome` ASC))
ENGINE = InnoDB
COMMENT = 'Tipos de licencas para as contas';


-- -----------------------------------------------------
-- Table `audioweb`.`contas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`contas` (
  `id_conta` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `id_licenca` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_conta`),
  INDEX `fk_contas_licencas1_idx` (`id_licenca` ASC),
  CONSTRAINT `fk_contas_licencas1`
    FOREIGN KEY (`id_licenca`)
    REFERENCES `audioweb`.`licencas` (`id_licenca`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Contas com conjunto de usuarios';


-- -----------------------------------------------------
-- Table `audioweb`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`usuarios` (
  `id_usuario` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(128) NOT NULL,
  `email` VARCHAR(128) NOT NULL,
  `senha` VARCHAR(128) NOT NULL,
  `id_conta` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_usuario`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  INDEX `fk_usuarios_contas1_idx` (`id_conta` ASC),
  CONSTRAINT `fk_usuarios_contas1`
    FOREIGN KEY (`id_conta`)
    REFERENCES `audioweb`.`contas` (`id_conta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela de usuarios';


-- -----------------------------------------------------
-- Table `audioweb`.`configuracoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`configuracoes` (
  `id_configuracao` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `chave` VARCHAR(32) NOT NULL,
  `nome` VARCHAR(128) NOT NULL,
  `valor_padrao` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`id_configuracao`),
  UNIQUE INDEX `nome_UNIQUE` (`nome` ASC),
  UNIQUE INDEX `chave_UNIQUE` (`chave` ASC))
ENGINE = InnoDB
COMMENT = 'Configuracoes padrao';


-- -----------------------------------------------------
-- Table `audioweb`.`usuarios_configuracoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`usuarios_configuracoes` (
  `id_usuario_configuracao` INT UNSIGNED NOT NULL,
  `valor_personalisado` VARCHAR(128) NOT NULL,
  `id_configuracao` SMALLINT UNSIGNED NOT NULL,
  `id_usuario` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_usuario_configuracao`),
  INDEX `fk_usuarios_configuracoes_configuracoes1_idx` (`id_configuracao` ASC),
  INDEX `fk_usuarios_configuracoes_usuarios1_idx` (`id_usuario` ASC),
  UNIQUE INDEX `configuracao_unica` (`id_configuracao` ASC, `id_usuario` ASC),
  CONSTRAINT `fk_usuarios_configuracoes_configuracoes1`
    FOREIGN KEY (`id_configuracao`)
    REFERENCES `audioweb`.`configuracoes` (`id_configuracao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuarios_configuracoes_usuarios1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `audioweb`.`usuarios` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Configuracoes personalizadas do usuario';


-- -----------------------------------------------------
-- Table `audioweb`.`operacoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`operacoes` (
  `id_operacao` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `chave` VARCHAR(32) NOT NULL,
  `nome` VARCHAR(128) NOT NULL,
  `tecla_padrao` SMALLINT UNSIGNED NOT NULL,
  `shift` TINYINT(1) NOT NULL,
  `alt` TINYINT(1) NOT NULL,
  `ctrl` TINYINT(1) NOT NULL,
  `ajuda_tecla` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`id_operacao`),
  UNIQUE INDEX `operacao_UNIQUE` (`nome` ASC),
  UNIQUE INDEX `chave_UNIQUE` (`chave` ASC))
ENGINE = InnoDB
COMMENT = 'Operacoes e suas respectivas teclas padrao';


-- -----------------------------------------------------
-- Table `audioweb`.`usuarios_operacoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`usuarios_operacoes` (
  `id_usuario_operacao` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `tecla_personalizada` SMALLINT UNSIGNED NOT NULL,
  `shift` TINYINT(1) NOT NULL,
  `alt` TINYINT(1) NOT NULL,
  `ctrl` TINYINT(1) NOT NULL,
  `id_operacao` SMALLINT UNSIGNED NOT NULL,
  `id_usuario` INT UNSIGNED NOT NULL,
  UNIQUE INDEX `tecla_usuario` (`id_usuario` ASC, `tecla_personalizada` ASC),
  UNIQUE INDEX `operacao_usuario` USING BTREE (`id_usuario` ASC),
  PRIMARY KEY (`id_usuario_operacao`),
  INDEX `fk_usuarios_operacoes_operacoes1_idx` (`id_operacao` ASC),
  UNIQUE INDEX `operacao_nica` (`id_operacao` ASC, `id_usuario` ASC),
  CONSTRAINT `fk_teclas_preferencias_usuarios_usuarios1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `audioweb`.`usuarios` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuarios_preferencias_operacoes_operacoes1`
    FOREIGN KEY (`id_operacao`)
    REFERENCES `audioweb`.`operacoes` (`id_operacao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Teclas de preferencia das operacoes dos usuarios';


-- -----------------------------------------------------
-- Table `audioweb`.`tipos_imagens`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`tipos_imagens` (
  `id_tipo_imagem` TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`id_tipo_imagem`),
  UNIQUE INDEX `nome_UNIQUE` (`nome` ASC))
ENGINE = InnoDB
COMMENT = 'Tabela de tipos de imagens';


-- -----------------------------------------------------
-- Table `audioweb`.`imagens`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`imagens` (
  `id_imagem` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(64) NOT NULL,
  `descricao` TEXT NOT NULL,
  `arquivo` VARCHAR(64) NOT NULL,
  `mime_type` VARCHAR(64) NOT NULL,
  `altura` INT UNSIGNED NOT NULL,
  `largura` INT UNSIGNED NOT NULL,
  `rotulos` VARCHAR(256) NOT NULL,
  `data_cadastro` DATETIME NOT NULL,
  `data_alteracao` DATETIME NOT NULL,
  `id_tipo_imagem` TINYINT UNSIGNED NOT NULL,
  `id_usuario` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_imagem`),
  INDEX `fk_imagens_tipos_imagens1_idx` (`id_tipo_imagem` ASC),
  INDEX `fk_imagens_usuarios1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_imagens_tipos_imagens1`
    FOREIGN KEY (`id_tipo_imagem`)
    REFERENCES `audioweb`.`tipos_imagens` (`id_tipo_imagem`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_imagens_usuarios1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `audioweb`.`usuarios` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela de imagens';


-- -----------------------------------------------------
-- Table `audioweb`.`publicos_alvos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`publicos_alvos` (
  `id_publico_alvo` TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`id_publico_alvo`),
  UNIQUE INDEX `nome_UNIQUE` (`nome` ASC))
ENGINE = InnoDB
COMMENT = 'Tabela de publicos alvos';


-- -----------------------------------------------------
-- Table `audioweb`.`imagens_publicos_alvos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`imagens_publicos_alvos` (
  `id_imagem_publico_alvo` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `id_imagem` BIGINT UNSIGNED NOT NULL,
  `id_publico_alvo` TINYINT UNSIGNED NOT NULL,
  INDEX `fk_imagens_has_publicos_alvos_publicos_alvos1_idx` (`id_publico_alvo` ASC),
  INDEX `fk_imagens_has_publicos_alvos_imagens1_idx` (`id_imagem` ASC),
  PRIMARY KEY (`id_imagem_publico_alvo`),
  CONSTRAINT `fk_imagens_has_publicos_alvos_imagens1`
    FOREIGN KEY (`id_imagem`)
    REFERENCES `audioweb`.`imagens` (`id_imagem`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_imagens_has_publicos_alvos_publicos_alvos1`
    FOREIGN KEY (`id_publico_alvo`)
    REFERENCES `audioweb`.`publicos_alvos` (`id_publico_alvo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela de publicos alvos das imagens';


-- -----------------------------------------------------
-- Table `audioweb`.`imagens_regioes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`imagens_regioes` (
  `id_imagem_regiao` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(64) NOT NULL,
  `descricao` TEXT NOT NULL,
  `posicao` TINYINT UNSIGNED NOT NULL,
  `tipo_regiao` ENUM('circle','rect','poly') NOT NULL,
  `coordenadas` TEXT NOT NULL,
  `id_imagem` BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_imagem_regiao`),
  INDEX `fk_imagens_regioes_imagens1_idx` (`id_imagem` ASC),
  CONSTRAINT `fk_imagens_regioes_imagens1`
    FOREIGN KEY (`id_imagem`)
    REFERENCES `audioweb`.`imagens` (`id_imagem`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela de regioes das imagens';


-- -----------------------------------------------------
-- Table `audioweb`.`formulas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`formulas` (
  `id_formula` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(64) NOT NULL,
  `descricao` TEXT NOT NULL,
  `expressao` TEXT NOT NULL,
  `data_cadastro` DATETIME NOT NULL,
  `data_alteracao` DATETIME NOT NULL,
  `id_usuario` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_formula`),
  INDEX `fk_formulas_usuarios1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_formulas_usuarios1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `audioweb`.`usuarios` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela de formulas';


-- -----------------------------------------------------
-- Table `audioweb`.`areas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`areas` (
  `id_area` SMALLINT UNSIGNED NOT NULL,
  `nome` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`id_area`),
  UNIQUE INDEX `nome_UNIQUE` (`nome` ASC))
ENGINE = InnoDB
COMMENT = 'Tabelas de areas';


-- -----------------------------------------------------
-- Table `audioweb`.`formulas_areas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`formulas_areas` (
  `id_formula_area` BIGINT NOT NULL AUTO_INCREMENT,
  `id_formula` BIGINT UNSIGNED NOT NULL,
  `id_area` SMALLINT UNSIGNED NOT NULL,
  INDEX `fk_formulas_has_areas_areas1_idx` (`id_area` ASC),
  INDEX `fk_formulas_has_areas_formulas1_idx` (`id_formula` ASC),
  PRIMARY KEY (`id_formula_area`),
  CONSTRAINT `fk_formulas_has_areas_formulas1`
    FOREIGN KEY (`id_formula`)
    REFERENCES `audioweb`.`formulas` (`id_formula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_formulas_has_areas_areas1`
    FOREIGN KEY (`id_area`)
    REFERENCES `audioweb`.`areas` (`id_area`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela de areas das formulas';


-- -----------------------------------------------------
-- Table `audioweb`.`aulas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`aulas` (
  `id_aula` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(128) NOT NULL,
  `descricao` TEXT NOT NULL,
  `rotulos` VARCHAR(256) NOT NULL,
  `data_cadastro` DATETIME NOT NULL,
  `data_alteracao` DATETIME NOT NULL,
  `id_usuario` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_aula`),
  INDEX `fk_aulas_usuarios1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_aulas_usuarios1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `audioweb`.`usuarios` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `audioweb`.`secoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`secoes` (
  `id_secao` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(128) NOT NULL,
  `nivel` TINYINT NOT NULL,
  `posicao` TINYINT UNSIGNED NOT NULL,
  `data_cadastro` DATETIME NOT NULL,
  `data_alteracao` DATETIME NOT NULL,
  `id_aula` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_secao`),
  INDEX `fk_secoes_aulas1_idx` (`id_aula` ASC),
  CONSTRAINT `fk_secoes_aulas1`
    FOREIGN KEY (`id_aula`)
    REFERENCES `audioweb`.`aulas` (`id_aula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela de secoes das aulas';


-- -----------------------------------------------------
-- Table `audioweb`.`secoes_formulas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`secoes_formulas` (
  `id_secao_formula` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `posicao` TINYINT UNSIGNED NOT NULL,
  `id_secao` INT UNSIGNED NOT NULL,
  `id_formula` BIGINT UNSIGNED NOT NULL,
  INDEX `fk_secoes_has_formulas_formulas1_idx` (`id_formula` ASC),
  INDEX `fk_secoes_has_formulas_secoes1_idx` (`id_secao` ASC),
  PRIMARY KEY (`id_secao_formula`),
  CONSTRAINT `fk_secoes_has_formulas_secoes1`
    FOREIGN KEY (`id_secao`)
    REFERENCES `audioweb`.`secoes` (`id_secao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_secoes_has_formulas_formulas1`
    FOREIGN KEY (`id_formula`)
    REFERENCES `audioweb`.`formulas` (`id_formula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela de formulas das secoes';


-- -----------------------------------------------------
-- Table `audioweb`.`secoes_imagens`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`secoes_imagens` (
  `id_secao_imagem` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `posicao` TINYINT UNSIGNED NOT NULL,
  `id_secao` INT UNSIGNED NOT NULL,
  `id_imagem` BIGINT UNSIGNED NOT NULL,
  INDEX `fk_secoes_has_imagens_imagens1_idx` (`id_imagem` ASC),
  INDEX `fk_secoes_has_imagens_secoes1_idx` (`id_secao` ASC),
  PRIMARY KEY (`id_secao_imagem`),
  CONSTRAINT `fk_secoes_has_imagens_secoes1`
    FOREIGN KEY (`id_secao`)
    REFERENCES `audioweb`.`secoes` (`id_secao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_secoes_has_imagens_imagens1`
    FOREIGN KEY (`id_imagem`)
    REFERENCES `audioweb`.`imagens` (`id_imagem`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela de imagens das secoes';


-- -----------------------------------------------------
-- Table `audioweb`.`restricoes_aplicacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`restricoes_aplicacao` (
  `id_restricao_aplicacao` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `chave` VARCHAR(64) NOT NULL,
  `nome` VARCHAR(128) NOT NULL,
  `valor_padrao` VARCHAR(128) NULL,
  PRIMARY KEY (`id_restricao_aplicacao`),
  UNIQUE INDEX `chave_UNIQUE` (`chave` ASC),
  UNIQUE INDEX `nome_UNIQUE` (`nome` ASC))
ENGINE = InnoDB
COMMENT = 'Restricoes previstas pela aplicacao';


-- -----------------------------------------------------
-- Table `audioweb`.`restricoes_licencas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`restricoes_licencas` (
  `id_restricao_licenca` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `valor_personalisado` VARCHAR(128) NULL,
  `id_licenca` INT UNSIGNED NOT NULL,
  `id_restricao_aplicacao` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_restricao_licenca`),
  INDEX `fk_restricoes_licencas_licencas1_idx` (`id_licenca` ASC),
  INDEX `fk_restricoes_licencas_restricoes_aplicacao1_idx` (`id_restricao_aplicacao` ASC),
  UNIQUE INDEX `restricao_unica` (`id_licenca` ASC, `id_restricao_aplicacao` ASC),
  CONSTRAINT `fk_restricoes_licencas_licencas1`
    FOREIGN KEY (`id_licenca`)
    REFERENCES `audioweb`.`licencas` (`id_licenca`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_restricoes_licencas_restricoes_aplicacao1`
    FOREIGN KEY (`id_restricao_aplicacao`)
    REFERENCES `audioweb`.`restricoes_aplicacao` (`id_restricao_aplicacao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Restricoes da licenca';


-- -----------------------------------------------------
-- Table `audioweb`.`usuarios_tokens`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`usuarios_tokens` (
  `id_usuario_token` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `token` VARCHAR(128) NOT NULL,
  `user_agent` VARCHAR(128) NOT NULL,
  `criacao` DATETIME NOT NULL,
  `expiracao` DATETIME NOT NULL,
  `id_usuario` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_usuario_token`),
  UNIQUE INDEX `token_UNIQUE` (`token` ASC),
  INDEX `fk_usuarios_tokens_usuarios1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_usuarios_tokens_usuarios1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `audioweb`.`usuarios` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `audioweb`.`arquivos_imagens`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`arquivos_imagens` (
  `id_arquivo_imagem` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `conteudo` LONGBLOB NOT NULL,
  `id_imagem` BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_arquivo_imagem`),
  INDEX `fk_arquivos_imagens_imagens1_idx` (`id_imagem` ASC),
  CONSTRAINT `fk_arquivos_imagens_imagens1`
    FOREIGN KEY (`id_imagem`)
    REFERENCES `audioweb`.`imagens` (`id_imagem`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela de arquivos de imagens.';


-- -----------------------------------------------------
-- Table `audioweb`.`acessos_especiais`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`acessos_especiais` (
  `id_acesso_especial` INT NOT NULL AUTO_INCREMENT,
  `hash` VARCHAR(128) NOT NULL,
  `id_usuario` INT UNSIGNED NOT NULL,
  `validade` DATETIME NOT NULL,
  PRIMARY KEY (`id_acesso_especial`),
  UNIQUE INDEX `hash_UNIQUE` (`hash` ASC),
  INDEX `fk_acessos_especiais_usuarios1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_acessos_especiais_usuarios1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `audioweb`.`usuarios` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela para acesso de usuarios que esqueceram senha';


-- -----------------------------------------------------
-- Table `audioweb`.`secoes_textos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audioweb`.`secoes_textos` (
  `id_secao_texto` BIGINT NOT NULL AUTO_INCREMENT,
  `texto` TEXT NOT NULL,
  `posicao` TINYINT UNSIGNED NOT NULL,
  `id_secao` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_secao_texto`),
  INDEX `fk_secoes_textos_secoes1_idx` (`id_secao` ASC),
  CONSTRAINT `fk_secoes_textos_secoes1`
    FOREIGN KEY (`id_secao`)
    REFERENCES `audioweb`.`secoes` (`id_secao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
